import 'package:flutter/material.dart';
import 'package:flutter_html/flutter_html.dart';
import 'package:se501_plantheon/common/widgets/topnavigation/navigation.dart';
import 'package:se501_plantheon/core/configs/constants/constraints.dart';
import 'package:se501_plantheon/core/configs/theme/app_colors.dart';

class DiseaseDescriptionScreen extends StatefulWidget {
  const DiseaseDescriptionScreen({super.key});

  @override
  State<DiseaseDescriptionScreen> createState() =>
      _DiseaseDescriptionScreenState();
}

class _DiseaseDescriptionScreenState extends State<DiseaseDescriptionScreen> {
  final PageController _pageController = PageController();
  int _currentImageIndex = 0;

  // Mock data cho b·ªánh
  final String diseaseName = "B·ªánh ƒë·ªëm l√° c√† chua";
  final String diseaseType = "B·ªánh n·∫•m";
  final List<String> diseaseImages = [
    "assets/images/plants.jpg",
    "assets/images/plants.jpg",
    "assets/images/plants.jpg",
    "assets/images/plants.jpg",
  ];

  // Mock HTML content
  final String htmlContent = """
    <div style="font-family: Arial, sans-serif; line-height: 1.6;">
      <h2 style="color: #2E7D32; margin-bottom: 16px;">M√¥ t·∫£ b·ªánh</h2>
      <p style="margin-bottom: 16px;">
        B·ªánh ƒë·ªëm l√° c√† chua l√† m·ªôt trong nh·ªØng b·ªánh ph·ªï bi·∫øn nh·∫•t ·∫£nh h∆∞·ªüng ƒë·∫øn c√¢y c√† chua. 
        B·ªánh n√†y do n·∫•m <strong>Alternaria solani</strong> g√¢y ra v√† th∆∞·ªùng xu·∫•t hi·ªán trong 
        ƒëi·ªÅu ki·ªán th·ªùi ti·∫øt ·∫©m ∆∞·ªõt.
      </p>
      
      <h3 style="color: #388E3C; margin-top: 24px; margin-bottom: 12px;">Tri·ªáu ch·ª©ng</h3>
      <ul style="margin-bottom: 16px;">
        <li>Xu·∫•t hi·ªán c√°c ƒë·ªëm tr√≤n m√†u n√¢u ƒëen tr√™n l√°</li>
        <li>ƒê·ªëm c√≥ th·ªÉ lan r·ªông v√† h·ª£p nh·∫•t v·ªõi nhau</li>
        <li>L√° v√†ng v√† r·ª•ng s·ªõm</li>
        <li>Gi·∫£m nƒÉng su·∫•t v√† ch·∫•t l∆∞·ª£ng qu·∫£</li>
      </ul>
      
      <h3 style="color: #388E3C; margin-top: 24px; margin-bottom: 12px;">Nguy√™n nh√¢n</h3>
      <p style="margin-bottom: 16px;">
        B·ªánh ph√°t tri·ªÉn m·∫°nh trong ƒëi·ªÅu ki·ªán:
      </p>
      <ul style="margin-bottom: 16px;">
        <li>ƒê·ªô ·∫©m cao (>80%)</li>
        <li>Nhi·ªát ƒë·ªô t·ª´ 20-30¬∞C</li>
        <li>M∆∞a nhi·ªÅu ho·∫∑c t∆∞·ªõi n∆∞·ªõc qu√° m·ª©c</li>
        <li>Thi·∫øu √°nh s√°ng m·∫∑t tr·ªùi</li>
      </ul>
      
      <h3 style="color: #388E3C; margin-top: 24px; margin-bottom: 12px;">C√°ch ph√≤ng tr·ª´</h3>
      <ol style="margin-bottom: 16px;">
        <li><strong>Bi·ªán ph√°p canh t√°c:</strong>
          <ul>
            <li>Tr·ªìng v·ªõi m·∫≠t ƒë·ªô ph√π h·ª£p</li>
            <li>T∆∞·ªõi n∆∞·ªõc v√†o g·ªëc, tr√°nh l√†m ∆∞·ªõt l√°</li>
            <li>V·ªá sinh ƒë·ªìng ru·ªông, lo·∫°i b·ªè l√° b·ªánh</li>
          </ul>
        </li>
        <li><strong>Bi·ªán ph√°p h√≥a h·ªçc:</strong>
          <ul>
            <li>S·ª≠ d·ª•ng thu·ªëc tr·ª´ n·∫•m nh∆∞ Mancozeb, Chlorothalonil</li>
            <li>Phun ƒë·ªãnh k·ª≥ 7-10 ng√†y/l·∫ßn</li>
            <li>Lu√¢n phi√™n c√°c lo·∫°i thu·ªëc ƒë·ªÉ tr√°nh kh√°ng thu·ªëc</li>
          </ul>
        </li>
      </ol>
      
      <div style="background-color: #E8F5E8; padding: 16px; border-radius: 8px; margin-top: 24px;">
        <h4 style="color: #2E7D32; margin-bottom: 8px;">üí° L∆∞u √Ω quan tr·ªçng</h4>
        <p style="margin: 0;">
          Ph√°t hi·ªán s·ªõm v√† x·ª≠ l√Ω k·ªãp th·ªùi s·∫Ω gi√∫p gi·∫£m thi·ªÉu thi·ªát h·∫°i. 
          N√™n ki·ªÉm tra c√¢y th∆∞·ªùng xuy√™n, ƒë·∫∑c bi·ªát trong m√πa m∆∞a.
        </p>
      </div>
    </div>
  """;

  @override
  void dispose() {
    _pageController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: CustomNavigationBar(
        title: "Ch·∫©n ƒëo√°n",
        showBackButton: true,
        actions: [
          CommonNavigationActions.share(
            onPressed: () {
              // TODO: Implement share functionality
              ScaffoldMessenger.of(context).showSnackBar(
                const SnackBar(
                  content: Text('Ch·ª©c nƒÉng chia s·∫ª ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn'),
                ),
              );
            },
          ),
          CommonNavigationActions.menu(
            onPressed: () {
              // TODO: Implement menu functionality
              ScaffoldMessenger.of(context).showSnackBar(
                const SnackBar(content: Text('Menu ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn')),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            // Disease Info Section
            _buildDiseaseInfoSection(),

            // Image Carousel Section
            _buildImageCarouselSection(),

            // HTML Content Section
            _buildHtmlContentSection(),
          ],
        ),
      ),
    );
  }

  Widget _buildDiseaseInfoSection() {
    return Container(
      width: double.infinity,
      padding: const EdgeInsets.all(AppConstraints.mainPadding),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            diseaseName,
            style: const TextStyle(
              fontSize: 24,
              fontWeight: FontWeight.bold,
              color: AppColors.primary_600,
            ),
          ),
          const SizedBox(height: 8),
          Container(
            padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 6),
            decoration: BoxDecoration(
              color: AppColors.primary_100,
              borderRadius: BorderRadius.circular(16),
              border: Border.all(color: AppColors.primary_300),
            ),
            child: Text(
              diseaseType,
              style: const TextStyle(
                fontSize: 14,
                fontWeight: FontWeight.w500,
                color: AppColors.primary_700,
              ),
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildImageCarouselSection() {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        const Padding(
          padding: EdgeInsets.symmetric(horizontal: AppConstraints.mainPadding),
          child: Text(
            "H√¨nh ·∫£nh b·ªánh",
            style: TextStyle(
              fontSize: 18,
              fontWeight: FontWeight.w600,
              color: AppColors.primary_600,
            ),
          ),
        ),
        const SizedBox(height: 12),
        SizedBox(
          height: 200,
          child: PageView.builder(
            controller: _pageController,
            onPageChanged: (index) {
              setState(() {
                _currentImageIndex = index;
              });
            },
            itemCount: diseaseImages.length,
            itemBuilder: (context, index) {
              return Container(
                margin: const EdgeInsets.symmetric(
                  horizontal: AppConstraints.mainPadding,
                ),
                decoration: BoxDecoration(
                  borderRadius: BorderRadius.circular(12),
                  boxShadow: [
                    BoxShadow(
                      color: Colors.black.withOpacity(0.1),
                      blurRadius: 8,
                      offset: const Offset(0, 2),
                    ),
                  ],
                ),
                child: ClipRRect(
                  borderRadius: BorderRadius.circular(12),
                  child: Image.asset(
                    diseaseImages[index],
                    fit: BoxFit.cover,
                    width: double.infinity,
                    errorBuilder: (context, error, stackTrace) {
                      return Container(
                        color: AppColors.primary_100,
                        child: const Center(
                          child: Icon(
                            Icons.image,
                            size: 50,
                            color: AppColors.primary_400,
                          ),
                        ),
                      );
                    },
                  ),
                ),
              );
            },
          ),
        ),
        const SizedBox(height: 12),
        // Page indicators
        Center(
          child: Row(
            mainAxisSize: MainAxisSize.min,
            children: List.generate(
              diseaseImages.length,
              (index) => Container(
                margin: const EdgeInsets.symmetric(horizontal: 4),
                width: _currentImageIndex == index ? 24 : 8,
                height: 8,
                decoration: BoxDecoration(
                  color: _currentImageIndex == index
                      ? AppColors.primary_600
                      : AppColors.primary_300,
                  borderRadius: BorderRadius.circular(4),
                ),
              ),
            ),
          ),
        ),
        const SizedBox(height: 24),
      ],
    );
  }

  Widget _buildHtmlContentSection() {
    return Container(
      width: double.infinity,
      padding: const EdgeInsets.all(AppConstraints.mainPadding),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Html(
            data: htmlContent,
            style: {
              "body": Style(margin: Margins.zero, padding: HtmlPaddings.zero),
              "h2": Style(
                color: AppColors.primary_600,
                fontSize: FontSize(20),
                fontWeight: FontWeight.bold,
                margin: Margins.only(bottom: 16),
              ),
              "h3": Style(
                color: AppColors.primary_400,
                fontSize: FontSize(16),
                fontWeight: FontWeight.w600,
                margin: Margins.only(top: 24, bottom: 12),
              ),
              "h4": Style(
                color: AppColors.primary_600,
                fontSize: FontSize(14),
                fontWeight: FontWeight.w600,
                margin: Margins.only(bottom: 8),
              ),
              "p": Style(
                fontSize: FontSize(14),
                lineHeight: const LineHeight(1.6),
                margin: Margins.only(bottom: 16),
                color: Colors.black87,
              ),
              "ul": Style(margin: Margins.only(bottom: 16)),
              "ol": Style(margin: Margins.only(bottom: 16)),
              "li": Style(
                fontSize: FontSize(14),
                lineHeight: const LineHeight(1.5),
                margin: Margins.only(bottom: 4),
                color: Colors.black87,
              ),
              "strong": Style(
                fontWeight: FontWeight.bold,
                color: AppColors.primary_700,
              ),
            },
          ),
        ],
      ),
    );
  }
}
